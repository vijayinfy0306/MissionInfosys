..............................INBUILT WE ARE GIVING....................

DECLARE 
a NUMBER := 55;
b NUMBER := 5;
arth_operation VARCHAR2(20) := 'ADD' ;
BEGIN
dbms_output.put_line('Program started.');
CASE
WHEN arth_operation = 'ADD'
THEN dbms_output.put_line('Addition of the numbers are: '|| (a+b));
WHEN arth_operation = 'SUBTRACT'
THEN dbms_output.put_line('Subtraction of the numbers are: '|| (a-b));
WHEN arth_operation = 'MULTIPLY'
THEN dbms_output.put_line('Multiplication of the numbers are: '|| a*b ); 
WHEN arth_operation = 'DIVIDE'
THEN dbms_output.put_line('Division of the numbers are: '|| a/b );
ELSE dbms_output.put_line('No operation action defined. Invalid operation'); 
END CASE;
dbms_output.put_line('Program completed.' );
END;





-----------------------------AT RUN TIME WE ARE ASSIGNING---------------------------------------------------------------------

DECLARE 
a NUMBER;
b NUMBER;
arth_operation VARCHAR2(20);
BEGIN
A:=:A;
B:=:B;
arth_operation:=:arth_operation;
dbms_output.put_line('Program started.');
CASE
WHEN arth_operation = 'ADD'
THEN dbms_output.put_line('Addition of the numbers are: '||(a+b) );
WHEN arth_operation = 'SUBTRACT'
THEN dbms_output.put_line('Subtraction of the numbers are: '|| (a-b));
WHEN arth_operation = 'MULTIPLY'
THEN dbms_output.put_line('Multiplication of the numbers are: '|| a*b ); 
WHEN arth_operation = 'DIVIDE'
THEN dbms_output.put_line('Division of the numbers are: '|| a/b );
WHEN arth_operation = 'ALL'
THEN dbms_output.put_line('All operations:'|| ((a+b)||'  '||(a-b)||'  '||(a*b)||'   '||(a/b)));
ELSE 
dbms_output.put_line('No operation action defined. Invalid operation'); 
END CASE;
dbms_output.put_line('Program completed.' );
END;


------------------------------MULTIPLICATION TABLE---------------------------------------------------------------

declare 
j number;
k number:=5;
begin
for j in 1..10 loop
dbms_output.put_line(k||' * '||j||' = '||(k*j));
end loop;
end;



-----------------------------AREA OF CIRCLE----------------------------
declare
pi constant number(4,2):=3.14;
radius number;
area number;
begin
radius:=:radius;
area:=pi*power(radius,2);
dbms_output.put_line('Area is:'|| area);
end




------------------CALCULATE AREA OF CIRCLE USING A LOOP----------------


declare
pi constant number(4,2):=3.14;
radius number;
area number;
begin
for radius in 1..5 loop
area:=pi*power(radius,2);
dbms_output.put_line('Area is:'|| area);
end loop;
end

--------------------AREA OF CIRCLE USING TABLE--------------------------

create table circle(radius number,area number);

declare
pi constant number(4,2):=3.14;
radius number;
area number;
begin
for radius in 1..5 loop
area:=pi*power(radius,2);
insert into circle values(radius,area);
dbms_output.put_line('Area is:'|| area);
end loop;
end
select * from circle;




-----------------------LOOP--------------------------

declare
i number;
begin
for i in 1..10 loop
dbms_output.put_line(i);
end loop;
end;




-------------------REVERSE LOOP-------------------

declare
i number;
begin
for i in reverse 1..10 loop
dbms_output.put_line(i);
end loop;
end; 

-------------------USING OF CASES-----------------

declare
day char(3);
begin
day:=:day;
case day
when 'SUN' then dbms_output.put_line('sunday');
when 'MON' then dbms_output.put_line('Monday');
when 'TUE' then dbms_output.put_line('Tuesday');
when 'WED' then dbms_output.put_line('Wednesday');
when 'THU' then dbms_output.put_line('Thursday');
when 'FRI' then dbms_output.put_line('Friday');
when 'SAT' then dbms_output.put_line('Saturday');
else dbms_output.put_line('Not a valid input');
end case;
end









